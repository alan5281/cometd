#summary 2007-04-04 Meeting
= 2007-04-04 Meeting 2:00 PST, 5:00 EST =

*IRC location: #cometd on MAGnet  (irc.perl.org)*

== Agenda ==

_*Status from previous meetings*_
    * Protocol doc progress
    * Test Suite Update  (2-28 meeting mst)
      

_*Possible agenda items*_


_Globbing_  
  Channels are currently based on URI format without parameters.  
         {{{
channel_name  = "/"  path_segments
path_segments = segment *( "/" segment )
segment       = *pchar
pchar         = alphanum | mark
         }}}

    Globbing was left out of spec but there is renewed interest.  Listed below are some general goals for globbing
      # No matching of partial topic names {{{/foo*}}} does not match {{{/foobar}}}
      # Need at least "this or below" matching   {{{/foo/*}}} would match /foo/bar and {{{/foo/bar/asdf}}} and possibly "this and just one level below" matching
      # More complex syntax equals more complex matching,  {{{/foo/*/bar}}} will be more difficult

      
    Possible Solutions
      # No wildcards...
      # Do not allow wildcards and use extension mechansim to indicate wildcards as advanced feature.  Server implementors could then specify type of wildcards the server supports (simple wildcards,   wildcards based on WS-Topics spec, etc).  Possibly allow wildcards in future version of Bayeux spec.
      # Implement wildcard system based on above goals and include in specfication.  Possibly allow more advanced wildcard systems in extension/advanced feature mechanism.
      # Investigate and use more advanced wildcarding - JMS globbing (pick a vendor specific one), WS-topics, etc.  Or come up with own specification.  


 

_Extension mechanism_ -  
  There has been some recent discussion. Following was discussed:
      # ext field allowed(not required) in every message.
      # Feature discovery done by looking at handshake ext fields in client and server.
  Any concerns/questions?  Will need to add section to protocol doc for this.


_Security_
 Although there is references to security in original document, further investigation/protocol doc inclusion  is needed on following points:
  # Specify allowance for any HTML auth scheme to be used without bayeux participation  (Basic/Digest)
  # Challenge base auth, including looking at ongoing token exchange (no simple token sequence, need for allowing old tokens). [http://groups.google.com/group/cometd-dev/browse_thread/thread/b38637fb3900b677?hl=en recent discussion]
  # Provision for setup where html generates token and passes it to comet server.
  # Pre-authenticated server blat events (anything need done for this??)
    

      

          





























































































































